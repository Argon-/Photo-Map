/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/*
 * Uni: [48.74670985863194, 9.105284214019775]
 * Hbf: [48.783285730720586, 9.178218841552734]
 */
/*
 * MapViewerUI.java
 *
 * Created on 08.06.2012, 16:12:56
 */
package net.zieglejn.osm_fapra.gui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.geom.Point2D;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Locale;
import java.util.Scanner;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.swingx.JXMapViewer;
import org.jdesktop.swingx.mapviewer.GeoPosition;
import org.jdesktop.swingx.painter.Painter;

/**
 *
 * @author spark
 */
public class MapViewerUI extends javax.swing.JFrame {

    /** Creates new form MapViewerUI */
    public MapViewerUI() {
        initComponents();
        
        myInitComponents();
        
    }

    void myInitComponents()
    {
        //*************** Comment S.F.
        //*******  here you probably want to initialize your own
        //*******  objects for graph representation, Dijkstra, ...
        
        
        // reroute mouse listener of subframe (bad hack)
        jXMapKit.getMainMap().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXMapKitMouseClicked(evt);
            }
        });
        
        // set the initial view on the map
        jXMapKit.setAddressLocationShown(false);    // don't show center
        jXMapKit.setAddressLocation(new GeoPosition(48.74670985863194, 9.105284214019775));     // Uni
        jXMapKit.setZoom(1); // set zoom level
        
        mySegSrc=new GeoPosition[9999];
        mySegTrg=new GeoPosition[9999];
        myColor=new Color[9999];
        myWidth=new int[9999];
        
        source=new GeoPosition(48.74670985863194, 9.105284214019775);
        target=new GeoPosition(48.783285730720586, 9.178218841552734);
        segCount=0;
        
        
        
        Painter<JXMapViewer> lineOverlay = new Painter<JXMapViewer>() {

            public void paint(Graphics2D g, JXMapViewer map, int w, int h) {
                g = (Graphics2D) g.create();
                //convert from viewport to world bitmap
                Rectangle rect = jXMapKit.getMainMap().getViewportBounds();
                g.translate(-rect.x, -rect.y);

                //do the drawing
                g.setColor(Color.BLUE);
                g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                
    
                Point2D ptSrc=jXMapKit.getMainMap().getTileFactory().geoToPixel(source,jXMapKit.getMainMap().getZoom());
                Point2D ptTrg=jXMapKit.getMainMap().getTileFactory().geoToPixel(target,jXMapKit.getMainMap().getZoom());
                
                for(int i=0; i<segCount; i++)
                {
                    ptSrc=jXMapKit.getMainMap().getTileFactory().geoToPixel(mySegSrc[i],jXMapKit.getMainMap().getZoom());
                    ptTrg=jXMapKit.getMainMap().getTileFactory().geoToPixel(mySegTrg[i],jXMapKit.getMainMap().getZoom());

                    g.setColor(myColor[i]);
                    g.setStroke(new BasicStroke(myWidth[i]));
                    g.drawLine((int)ptSrc.getX(), (int)ptSrc.getY(), (int)ptTrg.getX(), (int)ptTrg.getY());
                }

                g.dispose();
            }
        };
        jXMapKit.getMainMap().setOverlayPainter(lineOverlay);
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        algorithmSelector = new javax.swing.ButtonGroup();
        jXMapKit = new org.jdesktop.swingx.JXMapKit();
        jExitButton = new javax.swing.JButton();
        jClearButton = new javax.swing.JButton();
        msgField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jFileChooser.setCurrentDirectory(new java.io.File("/home/spark/WORKSPACE/CODE"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jXMapKit.setDefaultProvider(org.jdesktop.swingx.JXMapKit.DefaultProviders.OpenStreetMaps);
        jXMapKit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXMapKitMouseClicked(evt);
            }
        });

        jExitButton.setText("Exit");
        jExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitButtonActionPerformed(evt);
            }
        });

        jClearButton.setText("Clear");
        jClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtonActionPerformed(evt);
            }
        });

        msgField.setText("jTextField1");

        jLabel1.setText("Messages:");

        jButton2.setText("Load Segs");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(msgField, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jClearButton)
                            .addGap(501, 501, 501)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jXMapKit, javax.swing.GroupLayout.DEFAULT_SIZE, 1216, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXMapKit, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(msgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jExitButton)
                .addGap(230, 230, 230))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitButtonActionPerformed
// TODO add your handling code here:
    System.exit(0);
}//GEN-LAST:event_jExitButtonActionPerformed

private void jClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtonActionPerformed
// TODO add your handling code here:
    msgField.setText("");
    System.out.println("ClearButton pressed");
}//GEN-LAST:event_jClearButtonActionPerformed

private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
// TODO add your handling code here:
    msgField.setText("MouseClick outside Map");
}//GEN-LAST:event_formMouseClicked

private void jXMapKitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXMapKitMouseClicked
// TODO add your handling code here:
    GeoPosition clickPos=jXMapKit.getMainMap().convertPointToGeoPosition(evt.getPoint());
    // jXMapKit.setAddressLocation(clickPos);
    
    //int closestNodeID=myGraph.closestNodeID(clickPos.getLatitude(), clickPos.getLongitude());
    // System.out.println("Outdegree: "+myGraph.nofOutEdges(closestNodeID)+" Indegree:"+myGraph.nofInEdges(closestNodeID));
    //double newX=myGraph.xCoord(closestNodeID);
    //double newY=myGraph.yCoord(closestNodeID);
    double newX=clickPos.getLatitude();
    double newY=clickPos.getLongitude();
    if (toggleSource)
    {        
        segCount=0;
        msgField.setText("Source:"+newX+"/"+newY);
        source=new GeoPosition(newX,newY);
        segCount=0;
        // addNodeToDrawableList(closestNodeID, Color.BLUE, 10);
        // draw source as a very short segment :-)
        mySegSrc[segCount]=source;
        mySegTrg[segCount]=source;
        myColor[segCount]=Color.BLUE;
        myWidth[segCount]=10;
        segCount++;
    }
    else
    {    
        msgField.setText("Target:"+newX+"/"+newY);
        target=new GeoPosition(newX,newY);
        // addNodeToDrawableList(closestNodeID, Color.RED, 10);
        
        // draw line from source to target
        mySegSrc[segCount]=source;
        mySegTrg[segCount]=target;
        myColor[segCount]=Color.green;
        myWidth[segCount]=1;
        segCount++;
        
        // target as a very thick short segment
        mySegSrc[segCount]=target;
        mySegTrg[segCount]=target;
        myColor[segCount]=Color.RED;
        myWidth[segCount]=10;
        segCount++;
    }
    jXMapKit.repaint();


    toggleSource=!toggleSource;
    jXMapKit.repaint();
}//GEN-LAST:event_jXMapKitMouseClicked

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    //read sequence of segments from file and put them in overlay
    int returnVal = jFileChooser.showOpenDialog(this);
    if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
        File file = jFileChooser.getSelectedFile();
        msgField.setText("Reading Segs: "+file.getAbsolutePath());
        
        try
        {
            Scanner eingabe=new Scanner(file);
            eingabe.useLocale(Locale.US);
            int nofSegs=eingabe.nextInt();
            segCount=0;
            for(int i=0; i<nofSegs; i++)
            {
                float srcX,srcY,trgX,trgY;
                srcX=eingabe.nextFloat();
                srcY=eingabe.nextFloat();
                trgX=eingabe.nextFloat();
                trgY=eingabe.nextFloat();
                
                mySegSrc[segCount]=new GeoPosition(srcX,srcY);
                mySegTrg[segCount]=new GeoPosition(trgX, trgY);
                int colID;
                colID=eingabe.nextInt();
                switch (colID)
                {
                    case(0):
                        myColor[segCount]=Color.BLACK;
                        break;
                    case(1):
                        myColor[segCount]=Color.RED;
                        break;
                    case(2):
                        myColor[segCount]=Color.GREEN;
                        break;
                    case(3):
                        myColor[segCount]=Color.BLUE;
                        break;
                }
                myWidth[segCount]=eingabe.nextInt();
                segCount++;
                System.out.println("Reading Segment from "+srcX+"/"+srcY+" to "
                        +trgX+"/"+trgY);
            }
        }
            catch (FileNotFoundException ex) {
                Logger.getLogger(MapViewerUI.class.getName()).log(Level.SEVERE, null, ex);
            }    } else {
        System.out.println("File access cancelled by user.");
    }
    jXMapKit.repaint();
}//GEN-LAST:event_jButton2ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MapViewerUI().setVisible(true);
            }
        });
    }
  
    private GeoPosition [] mySegSrc;
    private GeoPosition [] mySegTrg;
    private Color[] myColor;       // with that color
    private int[] myWidth;         // and that width
    private int segCount=0;
    
    
    GeoPosition source, target;
    
    private boolean toggleSource=true;
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup algorithmSelector;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jClearButton;
    private javax.swing.JButton jExitButton;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private org.jdesktop.swingx.JXMapKit jXMapKit;
    private javax.swing.JTextField msgField;
    // End of variables declaration//GEN-END:variables
}
